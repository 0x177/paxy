on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Continuous integration

jobs:

  check:
    name: Check
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest            
          - target: x86_64-pc-windows-msvc
            os: windows
          - target: x86_64-apple-darwin
            os: macos-latest        
    runs-on: ${{ matrix.os }}
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - id: cargo_check_step
        name: Cargo Check
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: check          

  test:
    name: Test
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest            
          - target: x86_64-pc-windows-msvc
            os: windows
          - target: x86_64-apple-darwin
            os: macos-latest    
    runs-on: ${{ matrix.os }}
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - id: cargo_test_step
        name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true          
          target: ${{ matrix.target }}
          components: fmt
      - id: cargo_fmt_step
        name: Cargo Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true          
          target: ${{ matrix.target }}   
          components: clippy       
      - id: clippy_step
        name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings