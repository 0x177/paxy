on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Validation

jobs:

  check:
    name: Check
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-pc-windows-msvc,  x86_64-apple-darwin]
        include:
          - os: ubuntu-latest 
            target: x86_64-unknown-linux-gnu            
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu                        
          - os: windows-latest 
            target: x86_64-pc-windows-msvc            
          - os: macos-latest
            target: x86_64-apple-darwin                    
    runs-on: ${{ matrix.os }}
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - id: cargo_check_step
        name: Cargo Check
        uses: actions-rs/cargo@v1
        env:
          IS_CROSS: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        with:
          use-cross: ${{ env.IS_CROSS }}
          command: check          

  test:
    name: Test
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, x86_64-pc-windows-msvc,  x86_64-apple-darwin]
        include:
          - os: ubuntu-latest 
            target: x86_64-unknown-linux-gnu            
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu                        
          - os: windows-latest 
            target: x86_64-pc-windows-msvc            
          - os: macos-latest
            target: x86_64-apple-darwin      
    runs-on: ${{ matrix.os }}
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - id: cargo_test_step
        name: Cargo Test
        uses: actions-rs/cargo@v1
        env:
          IS_CROSS: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        with:
          use-cross: ${{ env.IS_CROSS }}
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true          
          components: rustfmt
      - id: cargo_fmt_step
        name: Cargo Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true          
          components: clippy       
      - id: clippy_step
        name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings