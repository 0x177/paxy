on:
  push:
    paths:
      - '.github/workflows/code_validation.yml' # Run when this workflow changes
      - '**/Cargo.toml' # Run when dependencies change
      - '**/Cargo.lock' # Run when dependencies change
      - '**/src/**'
  pull_request:
    paths:
      - '.github/workflows/code_validation.yml' # Run when this workflow changes
      - '**/Cargo.toml' # Run when dependencies change
      - '**/Cargo.lock' # Run when dependencies change
      - '**/src/**'
    branches: [main]
  workflow_dispatch: # Run when manually triggered
  workflow_call: # Run when called by another workflow

name: âœ” Validate Code Workflow

jobs:
  code_validation_job:
    name: ${{ matrix.job_name }}
    if: |
      !startsWith(github.event.head_commit.message, 'chore:')
      && !startsWith(github.event.head_commit.message, 'chore(')
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux
          - windows
          - apple
        cpu_architecture:
          - x86_64
          - aarch64
        task:
          - fmt
          - clippy
          - check
          - test
        exclude:
          - platform: windows
            cpu_architecture: aarch64
          - platform: apple
            cpu_architecture: aarch64
        include:
          - platform: linux
            cicd_runner: ubuntu-latest
          - platform: windows
            cicd_runner: windows-latest
          - platform: apple
            cicd_runner: macos-latest
          - compilation_target: x86_64-unknown-linux-gnu
            cpu_architecture: x86_64
            platform: linux
            toolchain: gnu
          - compilation_target: x86_64-pc-windows-msvc
            cpu_architecture: x86_64
            platform: windows
            toolchain: msvc
          - compilation_target: x86_64-apple-darwin
            cpu_architecture: x86_64
            platform: apple
            toolchain: darwin
          - compilation_target: aarch64-unknown-linux-gnu
            cpu_architecture: aarch64
            platform: linux
            toolchain: gnu 
          - task: fmt
            job_name: ðŸ“‘ Cargo Fmt Job
            rust_toolchain_components: cargo, rustfmt
          - task: clippy
            job_name: ðŸ“Ž Cargo Clippy Job
            rust_toolchain_components: cargo, clippy
          - task: check
            job_name: âœ… Cargo Check Job
            rust_toolchain_components: cargo, rustc, rust-std
          - task: test
            job_name: ðŸ§ª Cargo Test Job
            rust_toolchain_components: cargo, rustc, rust-std
    runs-on: ${{ matrix.cicd_runner }}
    steps:
      - name: ðŸŽŸ Checkout Git Repository Step
        id: repository_checkout_step
        uses: actions/checkout@v4
      - name: ðŸ§° Install Rust Toolchain Step
        id: toolchain_install_step
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.compilation_target }}          
          components: rustc, cargo
      - name: ðŸ”„ Install Cross-Compilation Tools Step
        id: cross_install_step
        if: ${{ matrix.cpu_architecture != 'x86_64' }}
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.compilation_target }}          
      - name: ðŸ—‚ Setup Cache Step
        id: cache_setup_step
        uses: Swatinem/rust-cache@v2
      - name: ðŸ“‘ Cargo Fmt Step
        id: cargo_fmt_step
        if: ${{ matrix.task == 'fmt' }}
        run: cargo fmt --verbose -- --check
      - name: ðŸ“Ž Cargo Clippy Step
        id: cargo_clippy_step
        if: ${{ matrix.task == 'clippy' }}
        run: cargo clippy --workspace --target ${{ matrix.compilation_target }} -- -D warnings
      - name: âœ… Cargo Check Step
        id: cargo_check_step
        if: ${{ matrix.task == 'check' }}
        run: cargo check --workspace --target ${{ matrix.compilation_target }}
      - name: ðŸ§ª Cargo Test Step
        id: cargo_test_step
        if: ${{ matrix.task == 'test' }}
        run: cargo test --workspace --target ${{ matrix.compilation_target }}
