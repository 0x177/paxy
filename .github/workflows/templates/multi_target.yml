on:
  push:
    paths:
      - '.github/workflows/some_job.yml' # Run when this workflow changes
      - '**/Cargo.toml' # Run when dependencies change
      - '**/Cargo.lock' # Run when dependencies change
      - '**/src/**'
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *' # Run periodically to capture recent developments
  workflow_dispatch: # Run when manually triggered
  workflow_call: # Run when called by another workflow

name: Some Workflow

jobs:
  some_job:
    name: Some Job
    if: |
      (
        github.event_name == 'push' 
        && github.ref == 'refs/heads/main'
      ) || (
        !startsWith(github.event.head_commit.message, 'style:')
        && !startsWith(github.event.head_commit.message, 'style(')
        && !startsWith(github.event.head_commit.message, 'chore:')
        && !startsWith(github.event.head_commit.message, 'chore(')
      )
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux
          - windows
          - apple
        cpu_architecture:
          - i686
          - x86_64
          - aarch64
          - riscv64gc
        include:
          - platform: linux
            cicd_runner: ubuntu_latest
          - platform: windows
            cicd_runner: windows-latest
          - platform: apple
            cicd_runner: macos-latest
          - compilation_target: x86_64-unknown-linux-gnu
            cpu_architecture: x86_64
            platform: linux
            toolchain: gnu
          - compilation_target: x86_64-unknown-linux-musl
            cpu_architecture: x86_64
            platform: linux
            toolchain: musl
          - compilation_target: x86_64-pc-windows-msvc
            cpu_architecture: x86_64
            platform: windows
            toolchain: msvc
          - compilation_target: x86_64-pc-windows-gnu
            cpu_architecture: x86_64
            platform: windows
            toolchain: gnu
          - compilation_target: x86_64-apple-darwin
            cpu_architecture: x86_64
            platform: apple
            toolchain: darwin
          - compilation_target: aarch64-unknown-linux-gnu
            cpu_architecture: aarch64
            platform: linux
            toolchain: gnu  
          - compilation_target: aarch64-unknown-linux-musl
            cpu_architecture: aarch64
            platform: linux
            toolchain: musl
          - compilation_target: aarch64-pc-windows-msvc
            cpu_architecture: aarch64
            platform: windows
            toolchain: msvc
          - compilation_target: aarch64-apple-darwin
            cpu_architecture: aarch64
            platform: apple
            toolchain: darwin
          - compilation_target: riscv64gc-unknown-linux-gnu
            cpu_architecture: riscv64gc
            platform: linux
            toolchain: gnu
    runs-on: ${{ matrix.cicd_runner }}
    steps:
      - name: ðŸŽŸ Checkout Git Repository Step
        id: repository_checkout_step
        uses: actions/checkout@v4
      - name: ðŸ§° Install Rust Toolchain
        id: toolchain_install_step
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.compilation_target }}          
          components: rustc, cargo
      - name: ðŸ”„ Install Cross-Compilation Tools
        id: cross_install_step
        if: ${{ matrix.cpu_architecture != 'x86_64' }}
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          targets: ${{ matrix.compilation_target }}          
      - name: ðŸ—‚ Setup Cache
        id: cache_setup_step
        uses: Swatinem/rust-cache@v2
      - name: ðŸ“œ Cargo Doc
        id: cargo_doc_step
        env:
          RUSTDOCFLAGS: "--enable-index-page -Zunstable-options"
        run: |
          cargo doc --all-features --workspace --no-deps --document-private-items
      - name: â¬† Upload Docs Artifact
        id: documentation_upload_step        
        uses: actions/upload-pages-artifact@v3
        with: 
          path: target/doc
  publish_documentation_job:
    name: âœˆ Publish Documentation Job   
    needs: build_documentation_job
    runs-on: ubuntu-latest
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment_step.outputs.page_url }}      
    steps:
      - name: âœˆ Deploy to GitHub Pages
        id: deployment_step
        uses: actions/deploy-pages@v4        