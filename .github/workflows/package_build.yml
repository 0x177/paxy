on:
  workflow_dispatch: # Run when manually triggered
    inputs:
      branch:
        description: 'The branch to act on.'
        default: 'main'
        required: false
        type: string
      release_type:
        description: 'The release type - stable or unstable. The stable release uses the source from the latest git tag whereas the unstable release uses the source from the latest git commit.'
        default: 'stable'
        required: false
        type: string
  workflow_call: # Run when called by another workflow
    inputs:
      branch:
        description: 'The branch to act on.'
        default: 'main'
        required: false
        type: string
      release_type:
        description: 'The release type - stable or unstable. The stable release uses the source from the latest git tag whereas the unstable release uses the source from the latest git commit.'
        default: 'stable'
        required: false
        type: string

name: 📦🏗 Package Build Workflow

run-name: \"${{ inputs.release_type }}\" build triggered by ${{ github.actor }} on branch ${{ inputs.branch }} 

jobs:
  cargo_build_job:
    name: 🏗 Build Job
    strategy:
      matrix:
        platform:
          - linux
          - windows
          - apple
        cpu_architecture:
          - x86_64
          - aarch64
        task:
          - fmt
          - clippy
          - check
          - test
        exclude:
          - platform: windows
            cpu_architecture: aarch64
          - platform: apple
            cpu_architecture: aarch64
        include:
          - platform: linux
            cicd_runner: ubuntu-latest
          - platform: windows
            cicd_runner: windows-latest
          - platform: apple
            cicd_runner: macos-latest
          - command_base: cross
          - compilation_target: x86_64-unknown-linux-gnu
            cpu_architecture: x86_64
            platform: linux
            toolchain: gnu
            command_base: cargo
          - compilation_target: x86_64-pc-windows-msvc
            cpu_architecture: x86_64
            platform: windows
            toolchain: msvc
            command_base: cargo
          - compilation_target: x86_64-apple-darwin
            cpu_architecture: x86_64
            platform: apple
            toolchain: darwin
            command_base: cargo
          - compilation_target: aarch64-unknown-linux-gnu
            cpu_architecture: aarch64
            platform: linux
            toolchain: gnu         
          - task: build
            job_name: 📑 Build Job
            rust_toolchain_components: cargo, rustc, rust-std, 
    runs-on: ${{ matrix.github_runner }}
    container: 
      image: ${{ matrix.container_image }}
      ports:
        - 80
    steps:
      - name: 🐋 Initialize Arch Linux Container 
        id: container_init_step
        if: ${{ matrix.platform=='archlinux' }}
        run: |
          # pacman-key --init
          pacman -Sy --noconfirm base-devel git # Install essential dependencies
          useradd build_user -m # Create the build user
          passwd -d build_user # Delete build_user's password
          printf 'build_user ALL=(ALL) ALL\n' | tee -a /etc/sudoers # Allow build_user password-less sudo
      - name: 🎟 Checkout Git Repository
        id: repository_checkout_step
        uses: actions/checkout@v4
      - name: 🛠 Build Package
        id: package_build_step     
        if: ${{ matrix.platform=='archlinux' }}   
        run: |
          chown -R build_user packaging
          chmod -R +x packaging
          sudo -u build_user sh -c "packaging/archlinux/build_package.sh stable --noconfirm"
      - name: ⬆ Upload Package Artifact
        id: upload_package_step
        uses: actions/upload-artifact@v4
        with: 
          name: Stable Package
          path: |
            packaging/archlinux/paxy/*.pkg.tar.*
          if-no-files-found: error