name: Release
run-name: Release triggered by ${{ github.actor }}
on:
  workflow_dispatch:
  workflow_call:
  push:
      tags:
        - "v**"
jobs:
  build:
    name: Build
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-unknown-linux-gnu
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu            
            os: ubuntu-latest 
          - target: x86_64-pc-windows-msvc 
            os: windows-latest           
          - target: x86_64-apple-darwin
            os: macos-latest             
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest           
    runs-on: ${{ matrix.os }}
    steps:
      - id: checkout_step
        name: Checkout Git Repository
        uses: actions/checkout@v2
      - id: install_toolchain_step
        name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - id: setup_macos_aarch64_docker_step
        name: Setup MacOS ARM Docker Image
        if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        uses: actions-rs/cargo@v1
        with:          
          command: build-docker-image          
          args: aarch64-apple-darwin-cross --tag local          
      - id: cargo_build_step
        name: Cargo Build
        uses: actions-rs/cargo@v1
        with:          
          command: build
          use-cross: true
          args: --all-features --workspace --release --target ${{ matrix.target }}
      - id: upload_binary_step
        name: Upload Binary Artifact
        uses: actions/upload-artifact@v3
        with: 
          name: ${{ matrix.target }} Stable
          path: |
            target/${{ matrix.target }}/release/paxy
            target/${{ matrix.target }}/release/paxy.exe
          if-no-files-found: error
  release:  
    needs: build        
    name: Release
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-unknown-linux-gnu
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            short_target_name: linux_x86_64                                                          
          - target: x86_64-pc-windows-msvc
            short_target_name: windows_x86_64
          - target: x86_64-apple-darwin
            short_target_name: macos_x86_64
          - target: aarch64-unknown-linux-gnu
            short_target_name: linux_arm64  
          - target: aarch64-apple-darwin
            short_target_name: macos_arm64
    runs-on: ubuntu-latest
    steps:
      - id: checkout_repository_step
        name: Checkout Git Repository
        uses: actions/checkout@v3
      - id: set_latest_tag
        name: Determine Latest Tag
        run: |
          git fetch --prune --unshallow --tags
          echo "LATEST_TAG=$(git tag | grep -v -P '^v([0-9]+)\.([0-9]+)\.([0-9]+).*\.' | grep -v -P '^v([0-9]+)\.([0-9]+)\.([0-9]+).*\_' | sort --version-sort | tail -n1)" >> $GITHUB_ENV        
      - id: download_binary_step 
        name: Download Binary Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }} Stable
          path: output
      - id: generate_checksum_step
        name: Generate CheckSum
        run: |
          sudo apt-get install tree
          tree ${{ steps.download_binary_step.outputs.download-path }}
          find ${{ steps.download_binary_step.outputs.download-path }} -type f -exec sh -c 'md5sum $0 > $0.md5sum' {} \;
      - id: create_release_step
        name: Create Release        
        uses: softprops/action-gh-release@v1
        with:          
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: false
          append_body: false
          body_path: CHANGELOG.md
          tag_name: ${{ env.LATEST_TAG }}_${{ matrix.short_target }}
          name: ${{ matrix.short_target }} ${{ env.LATEST_TAG }}
          files: |
            ${{ steps.download_binary_step.outputs.download-path }}/**paxy*
